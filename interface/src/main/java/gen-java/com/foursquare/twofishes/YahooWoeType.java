/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.foursquare.twofishes;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum YahooWoeType implements TEnum {
  UNKNOWN(0),
  TOWN(7),
  ADMIN1(8),
  ADMIN2(9),
  ADMIN3(10),
  POSTAL_CODE(11),
  COUNTRY(12),
  ISLAND(13),
  AIRPORT(14),
  DRAINAGE(15),
  PARK(16),
  POI(20),
  SUBURB(22),
  SPORT(23),
  COLLOQUIAL(24),
  ZONE(25),
  HISTORICAL_STATE(26),
  HISTORICAL_COUNTY(27),
  TIMEZONE(31),
  HISTORICAL_TOWN(35),
  STREET(100);

  private final int value;

  private YahooWoeType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static YahooWoeType findByValue(int value) { 
    switch (value) {
      case 0:
        return UNKNOWN;
      case 7:
        return TOWN;
      case 8:
        return ADMIN1;
      case 9:
        return ADMIN2;
      case 10:
        return ADMIN3;
      case 11:
        return POSTAL_CODE;
      case 12:
        return COUNTRY;
      case 13:
        return ISLAND;
      case 14:
        return AIRPORT;
      case 15:
        return DRAINAGE;
      case 16:
        return PARK;
      case 20:
        return POI;
      case 22:
        return SUBURB;
      case 23:
        return SPORT;
      case 24:
        return COLLOQUIAL;
      case 25:
        return ZONE;
      case 26:
        return HISTORICAL_STATE;
      case 27:
        return HISTORICAL_COUNTY;
      case 31:
        return TIMEZONE;
      case 35:
        return HISTORICAL_TOWN;
      case 100:
        return STREET;
      default:
        return null;
    }
  }
}
